/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cargo.project;
import java.awt.Color;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */

public class Cargo extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cargo
     */
    public Cargo() {
        initComponents();
        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cargo_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        items = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        number_of_kg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cargo_id = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        save_c = new javax.swing.JButton();
        update_c = new javax.swing.JButton();
        delete_c = new javax.swing.JButton();
        close_c = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 255, 255));
        setClosable(true);
        setResizable(true);
        setTitle("Cargo Registration");

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));

        jLabel1.setText("Cargo_Name:");

        jLabel3.setText("Items:");

        items.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsKeyReleased(evt);
            }
        });

        jLabel4.setText("Number_of_KG:");

        number_of_kg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                number_of_kgKeyReleased(evt);
            }
        });

        jLabel2.setText("Cargo_ID:");

        cargo_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cargo_idKeyReleased(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 255));

        save_c.setBackground(new java.awt.Color(255, 0, 51));
        save_c.setText("Save");
        save_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_cActionPerformed(evt);
            }
        });

        update_c.setBackground(new java.awt.Color(255, 0, 0));
        update_c.setText("Update");
        update_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_cActionPerformed(evt);
            }
        });

        delete_c.setBackground(new java.awt.Color(255, 0, 0));
        delete_c.setText("Delete");
        delete_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_cActionPerformed(evt);
            }
        });

        close_c.setBackground(new java.awt.Color(255, 0, 0));
        close_c.setText("Close");
        close_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_cActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(save_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(update_c, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(close_c, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_c)
                    .addComponent(update_c))
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_c)
                    .addComponent(close_c))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cargo_name, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cargo_id, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(number_of_kg, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cargo_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cargo_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(number_of_kg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Items", "Kg", "Total Payment"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
      Connection con1;
      PreparedStatement insert;
      
      
       private void table_update() {
        int CC;
        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
            insert = con1.prepareStatement("SELECT * FROM CARGO");
            ResultSet Rs = insert.executeQuery();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable2.getModel();
            DFT.setRowCount(0);

            while (Rs.next()) {
                Vector v2 = new Vector();
           
                for (int ii = 1; ii <= CC; ii++) {
      
                    v2.add(Rs.getString("CARGO_ID"));
                    v2.add(Rs.getString("CARGO_NAME"));
                    v2.add(Rs.getString("CARGO_ITEM"));
                    v2.add(Rs.getString("NKG"));
                     v2.add(Rs.getString("PAYMENT"));
                   
                }
                DFT.addRow(v2);
            }
        } catch (Exception e) {
        }
    }
       
    private void save_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_cActionPerformed
        // TODO add your handling code here:
        validation();
          if (cargo_id.getText().equals("") && cargo_name.getText().equals("")  &&  items.getText().equals("") ){
    JOptionPane.showMessageDialog(this, "Please Fill all feilds");  
               }
     
             
    else 
    
    {
            String id= cargo_id.getText();
       String name= cargo_name.getText();
        String it= items.getText();
        String kg= number_of_kg.getText();
            double val1 = Double.parseDouble(it);
               double val2 =Double.parseDouble(kg); 
               double total =val1*val2*0.70;  
    
       try {
               
           Class.forName("com.mysql.cj.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
            insert = con1.prepareStatement("insert into CARGO values(?,?,?,?,?)");
            insert.setString(1,id);
            
            insert.setString(2,name);
            insert.setString(3,it);
             insert.setString(4,kg);
             insert.setDouble(5,total);
            insert.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Saved");  
            
            cargo_id.setText("");
            cargo_name.setText("");
            items.setText("");
            number_of_kg.setText("");
           
         
             table_update();
             
              } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cargo.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Cargo.class.getName()).log(Level.SEVERE, null, ex);
            
        } 
               }
       
    }//GEN-LAST:event_save_cActionPerformed

    private void update_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_cActionPerformed
        // TODO add your handling code here:
             validation();
          if (cargo_id.getText().equals("") && cargo_name.getText().equals("")  &&  items.getText().equals("") ){
    JOptionPane.showMessageDialog(this, "Please Fill all feilds");  
               }
          else 
          {
          DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            int selectedIndex = jTable2.getSelectedRow();
         
        String name= cargo_name.getText();
        String it=  items.getText();
        String nkg= number_of_kg.getText();
         double val1 = Double.parseDouble(it);
          double val2 =Double.parseDouble(nkg); 
            double total =val1*val2*0.70;
          try {
               int ids = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
                  
      Class.forName("com.mysql.cj.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");   
              String sql = "update CARGO set CARGO_NAME= '" + name + "',CARGO_ITEM= '" + it + "',PAYMENT='"+total +  "' WHERE CARGO_ID ='" + ids + "' ";
                PreparedStatement pst;

                pst = con1.prepareStatement(sql);
                pst.execute();
            
            JOptionPane.showMessageDialog(this, "Record update");  
            
            cargo_id.setText("");
            cargo_name.setText("");
            items.setText("");
            number_of_kg.setText("");
           
             table_update();
             
              } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cargo.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Cargo.class.getName()).log(Level.SEVERE, null, ex);
            
        } 
          }
     
    }//GEN-LAST:event_update_cActionPerformed

    private void close_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_cActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_close_cActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        
        
        
        
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
  int selectedIndex = jTable2.getSelectedRow();
         
 cargo_id.setText(model.getValueAt(selectedIndex, 0).toString());
  cargo_name.setText(model.getValueAt(selectedIndex, 1).toString());
  items.setText(model.getValueAt(selectedIndex, 2).toString());
  number_of_kg.setText(model.getValueAt(selectedIndex, 3).toString());
   
       
  
  
  
    }//GEN-LAST:event_jTable2MouseClicked

    private void delete_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_cActionPerformed
        // TODO add your handling code here:
       
          if (cargo_id.getText().equals("") ){
    JOptionPane.showMessageDialog(this, "please enter ID");  
    
               }
          else 
          {
       
                 DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          int selectedIndex = jTable2.getSelectedRow();
          
            try {   
                
            int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
            int dialogResult = JOptionPane.showConfirmDialog (null, "Do you want to Delete the record","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){

           Class.forName("oracle.jdbc.OracleDriver");
            con1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","yoolka","123");
              
            insert = con1.prepareStatement("delete from CARGO where CARGO_ID = ?");
            insert.setInt(1,id);
            insert.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Delete");
             cargo_id.setText("");
            cargo_name.setText("");
            items.setText("");
            number_of_kg.setText("");
            table_update();
           
           }
            else 
            {
              JOptionPane.showMessageDialog(this, "Operatin is over");
            }

        } catch (ClassNotFoundException ex) {
        
        } catch (SQLException ex) {
            
        }
      }
    }//GEN-LAST:event_delete_cActionPerformed

     public  void validation(){
             String id= cargo_id.getText();
     
        String it= items.getText();
        String kg= number_of_kg.getText();
    
        if(id.matches("^[0-9]*$"))
        {
            cargo_id.setBackground(Color.green);
           
        } 
        
        else
        {
           
       cargo_id.setBackground(Color.red);
       
             JOptionPane.showMessageDialog(this, "ID: only numbers are allowed");
        }
        
           if(it.matches("^[0-9]*$"))
        {
            items.setBackground(Color.green);
           
        } 
        
        else
        {
           
       items.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "Items: only numbers are allowed");
        } 
           
              if(kg.matches("^[0-9]*$"))
        {
            number_of_kg.setBackground(Color.green);
           
        } 
        
        else
        {
           
       number_of_kg.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "Items: only numbers are allowed");
        }    
    }
    private void cargo_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cargo_idKeyReleased
        // TODO add your handling code here:
            String id= cargo_id.getText();
     
        if(id.matches("^[0-9]*$"))
        {
            cargo_id.setBackground(Color.green);
           
        } 
        
        else
        {
           
       cargo_id.setBackground(Color.red);
       
             JOptionPane.showMessageDialog(this, "ID: only numbers are allowed");
        }
    }//GEN-LAST:event_cargo_idKeyReleased

    private void itemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsKeyReleased
        // TODO add your handling code here:
        String it=items.getText();
              if(it.matches("^[0-9]*$"))
        {
            items.setBackground(Color.green);
           
        } 
        
        else
        {
           
       items.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "Items: only numbers are allowed");
        } 
    }//GEN-LAST:event_itemsKeyReleased

    private void number_of_kgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_number_of_kgKeyReleased
        // TODO add your handling code here:
        String kg =number_of_kg.getText();
              if(kg.matches("^[0-9]*$"))
        {
            number_of_kg.setBackground(Color.green);
           
        } 
        
        else
        {
           
       number_of_kg.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "Items: only numbers are allowed");
        }
    }//GEN-LAST:event_number_of_kgKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cargo_id;
    private javax.swing.JTextField cargo_name;
    private javax.swing.JButton close_c;
    private javax.swing.JButton delete_c;
    private javax.swing.JTextField items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField number_of_kg;
    private javax.swing.JButton save_c;
    private javax.swing.JButton update_c;
    // End of variables declaration//GEN-END:variables
}
