/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cargo.project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class Shipments extends javax.swing.JInternalFrame {
  Connection con1;
      PreparedStatement insert;
    /**
     * Creates new form Shipments
     */
    public Shipments() {
        initComponents();
        shipID();
        custID();
        empID();
        cargoID();
        portID();
         table_update();
        
    }

        public void custID() {
    
        try {
          Class.forName("com.mysql.cj.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
              insert = con1.prepareStatement("SELECT * FROM customers");
            ResultSet Rs = insert.executeQuery();
            
        while (Rs.next()) {
           custID.addItem(Rs.getString("cust_id"));  
        }
        
        
            
        }
         catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Shipment.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } 
    }

    
      public void shipID() {
    
        try {
          Class.forName("com.mysql.cj.jdbc.Driver");
        
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
              insert = con1.prepareStatement("SELECT * FROM ship");
            ResultSet Rs = insert.executeQuery();
            
        while (Rs.next()) {
           shipID.addItem(Rs.getString("ship_id"));  
        }
        
        
            
        }
         catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Shipment.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } 
    }

      public void empID() {
    
        try {
          Class.forName("com.mysql.cj.jdbc.Driver");
        
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
              insert = con1.prepareStatement("SELECT * FROM employee");
            ResultSet Rs = insert.executeQuery();
            
        while (Rs.next()) {
           empID.addItem(Rs.getString("emp_id"));  
        }
        
        
            
        }
         catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Shipment.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } 
    }

   
    
    
    
        public void cargoID() {
    
        try {
          Class.forName("com.mysql.cj.jdbc.Driver");
        
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
              insert = con1.prepareStatement("SELECT * FROM cargo");
            ResultSet Rs = insert.executeQuery();
            
        while (Rs.next()) {
           cargoID.addItem(Rs.getString("cargo_id"));  
        }
        
        
            
        }
         catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Shipment.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } 
    }

        public void portID() {
    
        try {
          Class.forName("com.mysql.cj.jdbc.Driver");
        
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");  
              insert = con1.prepareStatement("SELECT * FROM port");
            ResultSet Rs = insert.executeQuery();
            
        while (Rs.next()) {
           portID.addItem(Rs.getString("port_id"));  
        }
        
        
            
        }
         catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Shipment.class.getName()).log(Level.SEVERE, null, ex);
            
            
        } 
    }

 
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        txtdest = new javax.swing.JTextField();
        txtsource = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        custID = new javax.swing.JComboBox<>();
        shipID = new javax.swing.JComboBox<>();
        cargoID = new javax.swing.JComboBox<>();
        empID = new javax.swing.JComboBox<>();
        portID = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnupdate = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setTitle("Shipment");

        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtidKeyReleased(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Source");

        jLabel3.setText("Destination");

        custID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDActionPerformed(evt);
            }
        });

        jLabel4.setText("Port ID");

        jLabel5.setText("cargoID");

        jLabel6.setText("empID");

        jLabel7.setText("shipID");

        jLabel8.setText("custID");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(34, 34, 34))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtsource, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(txtdest, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(txtid)
                    .addComponent(custID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shipID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cargoID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(portID, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shipID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Source", "Destination", "Cust_ID", "Ship_ID", "Emp_ID", "Cargo_ID", "Port_ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        validation();
        if (txtid.getText().equals("") && txtsource.getText().equals("") && txtdest.getText().equals("")) {

            JOptionPane.showMessageDialog(this, " Please fill all fields");
        } else {
            String id = txtid.getText();

            String source = txtsource.getText();
            String destination = txtdest.getText();

            String cust = custID.getSelectedItem().toString();
            String ship = shipID.getSelectedItem().toString();
            String emp = empID.getSelectedItem().toString();
            String cargo = cargoID.getSelectedItem().toString();
            String port = portID.getSelectedItem().toString();

            try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo", "root", "");
                insert = con1.prepareStatement("insert into shipment values(?,?,?,?,?,?,?,?)");
                insert.setString(1, id);
                insert.setString(2, source);
                insert.setString(3, destination);
                insert.setString(4, cust);
                insert.setString(5, ship);
                insert.setString(6, emp);
                insert.setString(7, cargo);
                insert.setString(8, port);

                insert.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Saved");

                txtid.setText("");
                txtsource.setText("");
                txtdest.setText("");
                custID.setSelectedItem(null);

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Shipments.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
  
    }//GEN-LAST:event_btnsaveActionPerformed

           private void table_update() {
        int CC;
        try {
            
             Class.forName("com.mysql.cj.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo","root","");
              
            insert = con1.prepareStatement("SELECT * FROM shipment");
            ResultSet Rs = insert.executeQuery();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
            DFT.setRowCount(0);

            while (Rs.next()) {
                Vector v2 = new Vector();
           
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("shipment_id"));
                    v2.add(Rs.getString("port_Source"));
                    v2.add(Rs.getString("port_Distination"));
                    v2.add(Rs.getString("custID"));
                    v2.add(Rs.getString("shipID"));
                    v2.add(Rs.getString("empID"));

                    v2.add(Rs.getString("cargoID"));
                    v2.add(Rs.getString("portID"));
       
                }
                DFT.addRow(v2);
            }
        } catch (Exception e) {
        }
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
           DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        txtid.setText(model.getValueAt(selectedIndex, 0).toString());
        txtsource.setText(model.getValueAt(selectedIndex, 1).toString());
        txtdest.setText(model.getValueAt(selectedIndex, 2).toString());
        String cid = model.getValueAt(selectedIndex, 3).toString();
        String sid = model.getValueAt(selectedIndex, 4).toString();
        String eid = model.getValueAt(selectedIndex, 5).toString();
        String crid = model.getValueAt(selectedIndex, 6).toString();
        String pid = model.getValueAt(selectedIndex, 7).toString();
        custID.setSelectedItem(cid);
        shipID.setSelectedItem(sid);
        empID.setSelectedItem(eid);
        cargoID.setSelectedItem(crid);
        portID.setSelectedItem(pid);
    }//GEN-LAST:event_jTable1MouseClicked
    public  void validation(){
       
      String id =txtid.getText();
 
        if(id.matches("^[0-9]*$"))
        {
            txtid.setBackground(Color.green);
           
        } 
        
        else
        {
           
       txtid.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "ID: only numbers are allowed");
        }
        
    }
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        validation();
        if (txtid.getText().equals("") && txtsource.getText().equals("") && txtdest.getText().equals("")) {

                JOptionPane.showMessageDialog(this, " Please fill all fields");
        } else {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            try {

                int ids;
                ids = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());

                String id = txtid.getText();

                String source = txtsource.getText();
                String destination = txtdest.getText();

                String cust = custID.getSelectedItem().toString();

                String ship = shipID.getSelectedItem().toString();
                String emp = empID.getSelectedItem().toString();
                String cargo = cargoID.getSelectedItem().toString();
                String port = portID.getSelectedItem().toString();
                Class.forName("com.mysql.cj.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo", "root", "");
                insert = con1.prepareStatement("update shipment set port_Source= ?,	port_Distination = ?,custID = ? ,shipID =? , empID=? , cargoID=?,portID=? where shipment_id= ?");

                insert.setString(1, source);
                insert.setString(2, destination);
                insert.setString(3, cust);
                insert.setString(4, ship);
                insert.setString(5, emp);
                insert.setString(6, cargo);
                insert.setString(7, port);
                insert.setInt(8, ids);

                insert.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Updated");

                txtid.setText("");
                txtsource.setText("");
                txtdest.setText("");

                table_update();

            } catch (ClassNotFoundException ex) {

            } catch (SQLException ex) {

            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        validation();
        if (txtid.getText().equals("") && txtsource.getText().equals("") && txtdest.getText().equals("")) {

            JOptionPane.showMessageDialog(this, " Please fill all fields");
        } else {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            try {

                int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
                int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to Delete the record", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    con1 = DriverManager.getConnection("jdbc:mysql://localhost/cargo", "root", "");
                    insert = con1.prepareStatement("delete from shipment where shipment_id = ?");
                    insert.setInt(1, id);
                    insert.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Record Delete");
                    txtid.setText("");
                    txtsource.setText("");
                    txtdest.setText("");

                    custID.setSelectedItem(null);
                    table_update();

                }

            } catch (ClassNotFoundException ex) {

            } catch (SQLException ex) {

            }
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void txtidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyReleased
        // TODO add your handling code here:
        
        String id =txtid.getText();
 
        if(id.matches("^[0-9]*$"))
        {
            txtid.setBackground(Color.green);
           
        } 
        
        else
        {
           
       txtid.setBackground(Color.red);
             JOptionPane.showMessageDialog(this, "ID: only numbers are allowed");
        }
    }//GEN-LAST:event_txtidKeyReleased

    private void custIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cargoID;
    private javax.swing.JComboBox<String> custID;
    private javax.swing.JComboBox<String> empID;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> portID;
    private javax.swing.JComboBox<String> shipID;
    private javax.swing.JTextField txtdest;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtsource;
    // End of variables declaration//GEN-END:variables
}
